@* @page adalah syntax razor yang digunakan pada HTML
    diawali dengan @ dan dilanjutkan dengan page yang menandakan directive
    page adalah kata kunci razor yang menandukan bahwa file menangani MVC action
    bisa menghandle request*@
@* "{searchString?}" Alternatif route, sehingga url: /Movies/<searchString> dapat terjadi *@
@page

@* Directive menunjukan tipe model yang dilanjutkan ke razor pages
    dalam kasus ini model yang digunakan adalah RazorWebApp.Pages.IndexModel
    Model ini digunakan pada saat Html.DisplayNameFor() dan Html.DisplayFor()
    juga membuat Class turunan PageModel dapat digunakan untuk razor page*@
@model RazorWebApp.Pages.IndexModel
@* Baris dibawah merupakan contoh Razor Page mentransisi menjadi C#
    dengan { } sebagai pembatas*@
@{
    //Digunakan untuk memasukan sebuah adata kedalam view
    //dengan pola key dan nilai seperti session
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<p>
    <a asp-page="Create">Create New</a>
</p>

<form>
    <p>
        <select asp-for="MovieGenres" asp-items="Model.Genres">
            <option value="">All</option>
        </select>
        Title: <input type="text" asp-for="SearchString" />
        <input type="submit" value="Filter" />
    </p>

</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @* Lambda expression dibawah hanya di inspeksi dan
                    tidak di evaluasi, tidak ada error ketika model
                    model.Movie atau model.Movie[0] == null
                    Code dibawah menunjukan Nama Kolom pada tabel*@

                @Html.DisplayNameFor(model => model.Movie[0].Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movie[0].ReleaseDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movie[0].Genre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movie[0].Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Movie[0].Rating)
            </th>
            <th>
                @* Kosong karena digunakan untuk kolom aksi Edit, Delete, Detail *@
            </th>
        </tr>
    </thead>
    <tbody>
        @* Bisa menggunakan C# atau Markup Razor di HTML
            dengan memulai baris dengan @ *@
        @foreach (var item in Model.Movie)
        {
        <tr>
            <td>
                @* Nilai item.Title di evaluasi *@
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReleaseDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <th>
                @Html.DisplayFor(modelItem => item.Rating)
            </th>
            <td>
                @* akan menampilkan ID di URL layaknya get seperti /Movies/Edit?id=1 dsb  sesuai dengan yng diakses*@
                <a asp-page="./Edit" asp-route-id="@item.ID">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.ID">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.ID">Delete</a>
            </td>
        </tr>
        }
    </tbody>
</table>
